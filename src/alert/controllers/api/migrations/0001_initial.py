# Generated by Django 4.0 on 2022-01-13 17:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EateryStore',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=40)),
                ('menu_summary', models.CharField(blank=True, max_length=60)),
                ('image_url', models.URLField(blank=True)),
                ('location', models.CharField(blank=True, max_length=30)),
                ('campus_area', models.CharField(blank=True, choices=[('West', 'West'), ('North', 'North'), ('Central', 'Central'), ('Collegetown', 'Collegetown'), ('', 'None')], default='', max_length=15)),
                ('online_order_url', models.URLField(blank=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('payment_accepts_meal_swipes', models.BooleanField(blank=True, null=True)),
                ('payment_accepts_brbs', models.BooleanField(blank=True, null=True)),
                ('payment_accepts_cash', models.BooleanField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ItemStore',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('base_price', models.FloatField(blank=True, null=True)),
                ('eatery', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.eaterystore')),
            ],
        ),
        migrations.CreateModel(
            name='TransactionHistoryStore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('canonical_date', models.DateField()),
                ('block_end_time', models.TimeField()),
                ('transaction_count', models.IntegerField()),
                ('eatery', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.eaterystore')),
            ],
        ),
        migrations.CreateModel(
            name='SubItemStore',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('additional_price', models.FloatField(blank=True, null=True)),
                ('total_price', models.FloatField(blank=True, null=True)),
                ('name', models.CharField(max_length=40)),
                ('item_subsection', models.CharField(max_length=40)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.itemstore')),
            ],
        ),
        migrations.CreateModel(
            name='ReportStore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('created_timestamp', models.IntegerField()),
                ('eatery', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.eaterystore')),
            ],
        ),
        migrations.CreateModel(
            name='MenuStore',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40)),
                ('eatery', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.eaterystore')),
            ],
        ),
        migrations.CreateModel(
            name='DayOfWeekEventSchedule',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('event_description', models.CharField(choices=[('Breakfast', 'Breakfast'), ('Brunch', 'Brunch'), ('Lunch', 'Lunch'), ('Dinner', 'Dinner'), ('General', 'General')], max_length=10)),
                ('day_of_week', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], max_length=10)),
                ('start', models.TimeField()),
                ('end', models.TimeField()),
                ('eatery', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.eaterystore')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.menustore')),
            ],
        ),
        migrations.CreateModel(
            name='DateEventSchedule',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('event_description', models.CharField(choices=[('Breakfast', 'Breakfast'), ('Brunch', 'Brunch'), ('Lunch', 'Lunch'), ('Dinner', 'Dinner'), ('General', 'General')], max_length=10)),
                ('canonical_date', models.DateField()),
                ('start_timestamp', models.IntegerField()),
                ('end_timestamp', models.IntegerField()),
                ('eatery', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.eaterystore')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.menustore')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClosedEventSchedule',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('event_description', models.CharField(choices=[('Breakfast', 'Breakfast'), ('Brunch', 'Brunch'), ('Lunch', 'Lunch'), ('Dinner', 'Dinner'), ('General', 'General')], max_length=10)),
                ('canonical_date', models.DateField()),
                ('eatery', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.eaterystore')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryStore',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=40)),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.menustore')),
            ],
        ),
        migrations.CreateModel(
            name='CategoryItemAssociation',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.categorystore')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.itemstore')),
            ],
        ),
        migrations.CreateModel(
            name='AlertStore',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=250)),
                ('start_timestamp', models.IntegerField()),
                ('end_timestamp', models.IntegerField()),
                ('eatery', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.eaterystore')),
            ],
        ),
        migrations.AddIndex(
            model_name='transactionhistorystore',
            index=models.Index(fields=['canonical_date'], name='api_transac_canonic_7e6d4f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='transactionhistorystore',
            unique_together={('eatery_id', 'block_end_time', 'canonical_date')},
        ),
        migrations.AlterUniqueTogether(
            name='menustore',
            unique_together={('eatery', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='dayofweekeventschedule',
            unique_together={('eatery', 'day_of_week', 'event_description')},
        ),
        migrations.AlterUniqueTogether(
            name='categorystore',
            unique_together={('menu', 'category')},
        ),
    ]
